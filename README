#Even the README also kind of DRAFT 
# PHP Base Framework

PHP Base Framework adalah kerangka kerja dasar untuk membangun aplikasi web menggunakan PHP. Framework ini dirancang untuk fleksibel, ringan, dan mudah digunakan, serta dapat dikembangkan lebih lanjut sesuai kebutuhan proyek Anda.

---

## Fitur Utama

- **Modular Architecture**: Mendukung pengembangan aplikasi dengan struktur modular.
- **Routing System**: Sistem routing bawaan untuk mempermudah pengelolaan URL.
- **Template Engine**: Dukungan template engine untuk memisahkan logika dan tampilan.
- **Database Abstraction**: Integrasi PDO untuk pengelolaan database yang aman dan efisien.
- **Middleware**: Dukungan middleware untuk pengelolaan request/respons.
- **Extensible**: Mudah untuk menambahkan library atau plugin eksternal.



##Kebutuhan

Core framework harus menjadi tanggung jawab team diluar softdev. 
    Team softdev hanya bertanggung jawab thd pengembangan aplikasi bisnis di dalam core.
    Pengembangan core framework harus bisa menghilangkan absolute developer dimana spt halnya no absolute access.
    A least apa yang dikembangkan oleh team softdev tidak akan bisa berjalan tanpa core framework.
Perlu disusunnya pengaturan propriatery library berikut prosedur dan ketentuannya.
Harus ada pola pengaturan hak akses yang :
    - Terpusat
    - berbasis RABC atau Separated of Duty ( SoD )
    - tidak menutup kemungkinan hak akses yang bersifat cross divisi atau departemen.
    - sistem yang tidak mengijinkan satu user punya absolute authority
    - per aplikasi memiliki pengaturan tersendiri namun tetap terpusat.
Abstraction Layer Implementation as Function Alias so get Less Dependency with PHP Version Update or Upgrade.
Harus menerapkan auto load untuk propriatery library dan Function Alias.
Source code harus tersimpan dalam sistem version control dengan menggunakan GIT.
Harus bisa memungkinkan implementasi konsep DevOps.
Harus bisa memungkinkan dapat ditest dengan menggunakan autonomous test tool.
Harus terdokumentasi sehingga bisa dilakukan validasi verifikasi sesuai GAMP 5.
Harus memiliki dokumentasi mengikuti Good Documentation Practice.
Perlu diterapkan standarisasi SQL Query yang bisa dipertanggung jawabkan.
Harus ada dipastikan bahwa pemograman mengikuti konsep Factorization Rule dan SOLID
Standar keamanan harus mengikuti standar yang ada.
- Bebas xscript
- Bebas SQL Injection
- Matikan fungsi execute native PHP
Setiap proses bisa menghasilkan kebutuhan forensik jika terjadi sesuatu dan turut menjaga integritas data.
Framework harus mendukung pencatatan data yang akurat, dapat dipertanggungjawabkan, dan sesuai dengan regulasi farmasi.
Framework harus siap digunakan baik sebagai API maupun WEB.
Relasi dengan config : tidak boleh ada bersifat hardcode.
Relasi dengan Infrastruktur maka framework harus :
- flexibel dengan perubahan topology server database
- compatible dengan konsep load balancing
- menggunakan domain name untuk alamat dan bukan berupa IP address.

---

## Instalasi

### 1. Clone Repository
Clone repository ini ke direktori proyek Anda:
```bash
git clone https://github.com/username/php-base-framework.git
cd php-base-framework

2. Install Dependencies

composer install

3. Konfigurasi
Salin file .env.example menjadi .env:

cp .env.example .env

4. Jalankan Server
php -S localhost:8000 -t public/

Struktur Direktori
php-base-framework/
├── app/                # Direktori utama aplikasi
│   ├── Controllers/    # Controller aplikasi
│   ├── Models/         # Model aplikasi
│   ├── Views/          # Template tampilan
│   └── Helpers/        # Helper function
├── config/             # Konfigurasi aplikasi
├── public/             # Direktori publik (entry point)
│   └── index.php       # Entry point utama
├── routes/             # Definisi routing
├── storage/            # File log, cache, dll.
├── vendor/             # Library pihak ketiga (Composer)
├── .env.example        # Contoh file environment
├── composer.json       # File konfigurasi Composer
└── README.md           # Dokumentasi

Contoh Penggunaan

1. Menambahkan Route
Tambahkan route baru di file routes/web.php:
$router->get('/hello', function () {
    return "Hello, World!";
});

2. Membuat Controller
Buat controller di direktori app/Controllers:

namespace App\Controllers;

class HelloController
{
    public function greet()
    {
        return "Hello from Controller!";
    }
}

Tambahkan route untuk controller tersebut:

$router->get('/greet', [App\Controllers\HelloController::class, 'greet']);

Kontribusi
Kami menerima kontribusi untuk pengembangan framework ini. Silakan ikuti langkah berikut:

Fork repository ini.
Buat branch baru untuk fitur/bugfix Anda:
git checkout -b feature/nama-fitur

Commit perubahan Anda:
git commit -m "Menambahkan fitur: nama-fitur"

Push branch Anda ke repository forked:
git push origin feature/nama-fitur

Buat Pull Request (PR) ke repository utama.


Lisensi
Framework ini dilisensikan di bawah lisensi MIT License.

Kontak
Jika Anda memiliki pertanyaan atau saran, silakan hubungi kami di email@example.com.

### Penyesuaian:
- **URL Repository**: Ganti `https://github.com/username/php-base-framework.git` dengan URL repository Anda.
- **Detail Fitur**: Tambahkan atau ubah fitur sesuai dengan framework yang Anda kembangkan.
- **Informasi Kontak**: Ganti dengan email atau kontak tim Anda.

README ini memberikan gambaran jelas tentang penggunaan dan pengembangan framework Anda. Apakah ada bagian yang perlu ditambahkan atau diperjelas?
